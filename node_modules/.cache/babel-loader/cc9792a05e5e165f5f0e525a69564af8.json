{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhsu/Documents/GitHub/spootify/my-app/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  var [token, setToken] = useState(\"\");\n  var [data, setData] = useState([]);\n  var [auth, setAuth] = useState(\"\");\n  var count = 0;\n  useEffect(() => {\n    console.log(\"The URL of this page is: \" + window.location.href);\n    var url = window.location.href;\n    var accessToken = window.location.href.split('code=').pop();\n    console.log(accessToken);\n    fetch(\"http://localhost:3000/auth\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        authKey: accessToken,\n        uri: url\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n      console.log(res.access_token);\n      setToken(res.access_token);\n    });\n    console.log(accessToken);\n  }, []);\n  console.log(token);\n\n  function refresh() {\n    fetch(\"http://localhost:3000/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(data => data.json()).then(data => {\n      console.log(data);\n      setAuth(data);\n      window.location.href = data;\n    });\n  }\n\n  async function topTracksL() {\n    try {\n      await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=long_term\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        setData(res.items);\n      });\n    } catch (err) {\n      console.log(\"Please refresh\");\n    }\n  }\n\n  async function topTracksM() {\n    await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': 'Bearer ' + token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n      setData(res.items);\n    });\n  }\n\n  async function topTracksS() {\n    await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=short_term\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': 'Bearer ' + token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n      setData(res.items);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: refresh,\n        className: \"backlink\",\n        children: \"Spootify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: topTracksL,\n        children: \"all time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: topTracksM,\n        children: \"last 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: topTracksS,\n        children: \"last month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data ? data.map((track, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [i + 1, \". \", track === null || track === void 0 ? void 0 : track.name, \" - \", track === null || track === void 0 ? void 0 : track.artists[0].name]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)) : \"Unable to load data. Please press Spootify to continue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Dashboard, \"NdgkDpx4P3wT1P4894iOCJD+LSc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/samuelhsu/Documents/GitHub/spootify/my-app/src/components/Dashboard.js"],"names":["React","useEffect","useState","Dashboard","token","setToken","data","setData","auth","setAuth","count","console","log","window","location","href","url","accessToken","split","pop","fetch","method","headers","Accept","body","JSON","stringify","authKey","uri","then","res","json","access_token","refresh","topTracksL","items","err","topTracksM","topTracksS","map","track","i","name","artists"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Dashboard.css\";\n\nfunction Dashboard() {\n    var [token, setToken] = useState(\"\");\n    var [data, setData] = useState([]);\n    var [auth, setAuth] = useState(\"\");\n    \n    var count = 0;\n\n    useEffect(() => {\n        console.log(\"The URL of this page is: \" + window.location.href);\n        var url = window.location.href;\n        var accessToken = window.location.href.split('code=').pop();  \n        console.log(accessToken);\n\n        fetch(\"http://localhost:3000/auth\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n            authKey: accessToken,\n            uri: url,\n            })\n        })\n        .then(res => res.json()) \n        .then(res => {\n            console.log(res);\n            console.log(res.access_token);\n            setToken(res.access_token);\n        })\n        console.log(accessToken);\n    }, []);\n    console.log(token)\n\n    function refresh() {\n        fetch(\"http://localhost:3000/login\", {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n        }\n        })\n        .then(data => data.json()) \n        .then(data => {\n            console.log(data);\n            setAuth(data);\n            window.location.href = data;\n        })\n    } \n    async function topTracksL() {\n        try {\n            await fetch (\"https://api.spotify.com/v1/me/top/tracks?time_range=long_term\", {\n            method: \"GET\",\n            headers: {\n                'Authorization': 'Bearer ' + token,\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            }\n        })\n        .then (res => res.json())\n        .then (res => {\n            console.log(res);\n            setData(res.items);\n        })\n          }\n          catch(err) {\n            console.log(\"Please refresh\");\n          }\n\n    }\n\n    async function topTracksM() {\n        await fetch (\"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term\", {\n            method: \"GET\",\n            headers: {\n                'Authorization': 'Bearer ' + token,\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            }\n        })\n        .then (res => res.json())\n        .then (res => {\n            console.log(res);\n            setData(res.items);\n        })\n    }\n\n    async function topTracksS() {\n        await fetch (\"https://api.spotify.com/v1/me/top/tracks?time_range=short_term\", {\n            method: \"GET\",\n            headers: {\n                'Authorization': 'Bearer ' + token,\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            }\n        })\n        .then (res => res.json())\n        .then (res => {\n            console.log(res);\n            setData(res.items);\n        })\n    }\n\n    return (\n      <div className=\"Dashboard\">\n          <div className=\"text-container\">\n          <div onClick={refresh} className=\"backlink\">Spootify</div>\n              <br></br>\n              <button onClick={topTracksL}>all time</button>\n              <button onClick={topTracksM}>last 6 months</button>\n              <button onClick={topTracksS}>last month</button>\n              <br></br>\n              <br></br>\n              <ul>\n                 { data ? data.map((track, i)=> (\n                    <li key={i}>{i+1}. {track?.name} - {track?.artists[0].name}</li> \n                )) : \"Unable to load data. Please press Spootify to continue.\"}\n              </ul>\n              <br></br>\n              <br></br>\n          </div>\n      </div>\n  )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}